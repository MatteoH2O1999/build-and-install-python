name: CI/CD

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  NODE_VERSION: 16

jobs:
  # Prepare npm cache for following jobs
  prepare_cache:
    runs-on: ${{ matrix.os }}
    name: Prepare cache for ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci

  # Run unit tests
  unit_tests:
    runs-on: ${{ matrix.os }}
    name: Unit tests on ${{ matrix.os }}
    needs: prepare_cache
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test-ci
        env:
          FORCE_COLOR: 3

  # Run linters on code
  lint:
    runs-on: ubuntu-latest
    name: Lint code
    needs: prepare_cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run prettier
        run: npm run format-check
      - name: Run eslint
        run: npm run lint

  # Test if build is successful
  build:
    runs-on: ubuntu-latest
    name: Test build
    needs: prepare_cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build typescript
        run: npm run build
      - name: Package with NCC
        run: npm run package

  # Update release tag
  release:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    name: Build and release
    needs: [build, lint, unit_tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.event.release.tag_name }}
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build typescript
        run: npm run build
      - name: Package with NCC
        run: npm run package
      - name: Force update tag
        uses: JasonEtco/build-and-tag-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}